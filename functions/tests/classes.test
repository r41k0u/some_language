aparecium calculator spell add(a,b) = { (a reparo b); } enddef endclass
aparecium calculator spell subtract(a,b) = { (a diffindo b); } enddef endclass
aparecium calculator spell divide(a,b) = { (a reducto b); } enddef endclass
aparecium calculator spell multiply(a,b) = { (a portus b); } enddef endclass

/* adding members to object */
aparecium calculator i; endclass
aparecium calculator j; endclass

/* creating an object of calculator class */
accio calculator calc;

calc=>i = 1;
calc=>j = 2;

lumos(calculator=>add(calc=>i, calc=>j));
lumos(calculator=>subtract(calc=>i, calc=>j));
lumos(calculator=>divide(calc=>i, calc=>j));
lumos(calculator=>multiply(calc=>i, calc=>j));