Terminals unused in grammar

    THEN
    DO


Grammar

    0 $accept: calclist $end

    1 stmt: o_stmt
    2     | c_stmt

    3 o_stmt: IF '(' exp ')' stmt ENDIF
    4       | IF '(' exp ')' c_stmt ELSE o_stmt ENDIF
    5       | WHILE '(' exp ')' o_stmt

    6 c_stmt: exp EOL
    7       | '{' list '}'
    8       | EOL
    9       | IF '(' exp ')' c_stmt ELSE c_stmt ENDIF
   10       | WHILE '(' exp ')' c_stmt

   11 list: stmt
   12     | list stmt

   13 exp: exp CMP exp
   14    | exp '+' exp
   15    | exp '-' exp
   16    | exp '*' exp
   17    | exp '/' exp
   18    | '|' exp
   19    | '(' exp ')'
   20    | '-' exp
   21    | NUMBER
   22    | FUNC '(' explist ')'
   23    | NAME
   24    | NAME '=' exp
   25    | NAME '(' explist ')'

   26 explist: exp
   27        | exp ',' explist

   28 symlist: NAME
   29        | NAME ',' symlist

   30 calclist: ε
   31         | calclist stmt
   32         | calclist LET NAME '(' symlist ')' '=' list ENDDEF
   33         | calclist error EOL


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 3 4 5 9 10 19 22 25 32
    ')' (41) 3 4 5 9 10 19 22 25 32
    '*' (42) 16
    '+' (43) 14
    ',' (44) 27 29
    '-' (45) 15 20
    '/' (47) 17
    '=' (61) 24 32
    '{' (123) 7
    '|' (124) 18
    '}' (125) 7
    error (256) 33
    NUMBER <d> (258) 21
    NAME <s> (259) 23 24 25 28 29 32
    FUNC <fn> (260) 22
    EOL (261) 6 8 33
    IF (262) 3 4 9
    ELSE (263) 4 9
    WHILE (264) 5 10
    LET (265) 32
    ENDIF (266) 3 4 9
    THEN (267)
    DO (268)
    ENDDEF (269) 32
    CMP <fn> (270) 13
    UMINUS (271)


Nonterminals, with rules where they appear

    $accept (28)
        on left: 0
    stmt <a> (29)
        on left: 1 2
        on right: 3 11 12 31
    o_stmt <a> (30)
        on left: 3 4 5
        on right: 1 4 5
    c_stmt <a> (31)
        on left: 6 7 8 9 10
        on right: 2 4 9 10
    list <a> (32)
        on left: 11 12
        on right: 7 12 32
    exp <a> (33)
        on left: 13 14 15 16 17 18 19 20 21 22 23 24 25
        on right: 3 4 5 6 9 10 13 14 15 16 17 18 19 20 24 26 27
    explist <a> (34)
        on left: 26 27
        on right: 22 25 27
    symlist <sl> (35)
        on left: 28 29
        on right: 29 32
    calclist (36)
        on left: 30 31 32 33
        on right: 0 31 32 33


State 0

    0 $accept: • calclist $end

    $default  reduce using rule 30 (calclist)

    calclist  go to state 1


State 1

    0 $accept: calclist • $end
   31 calclist: calclist • stmt
   32         | calclist • LET NAME '(' symlist ')' '=' list ENDDEF
   33         | calclist • error EOL

    $end    shift, and go to state 2
    error   shift, and go to state 3
    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    EOL     shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    LET     shift, and go to state 10
    '-'     shift, and go to state 11
    '|'     shift, and go to state 12
    '('     shift, and go to state 13
    '{'     shift, and go to state 14

    stmt    go to state 15
    o_stmt  go to state 16
    c_stmt  go to state 17
    exp     go to state 18


State 2

    0 $accept: calclist $end •

    $default  accept


State 3

   33 calclist: calclist error • EOL

    EOL  shift, and go to state 19


State 4

   21 exp: NUMBER •

    $default  reduce using rule 21 (exp)


State 5

   23 exp: NAME •
   24    | NAME • '=' exp
   25    | NAME • '(' explist ')'

    '='  shift, and go to state 20
    '('  shift, and go to state 21

    $default  reduce using rule 23 (exp)


State 6

   22 exp: FUNC • '(' explist ')'

    '('  shift, and go to state 22


State 7

    8 c_stmt: EOL •

    $default  reduce using rule 8 (c_stmt)


State 8

    3 o_stmt: IF • '(' exp ')' stmt ENDIF
    4       | IF • '(' exp ')' c_stmt ELSE o_stmt ENDIF
    9 c_stmt: IF • '(' exp ')' c_stmt ELSE c_stmt ENDIF

    '('  shift, and go to state 23


State 9

    5 o_stmt: WHILE • '(' exp ')' o_stmt
   10 c_stmt: WHILE • '(' exp ')' c_stmt

    '('  shift, and go to state 24


State 10

   32 calclist: calclist LET • NAME '(' symlist ')' '=' list ENDDEF

    NAME  shift, and go to state 25


State 11

   20 exp: '-' • exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 11
    '|'     shift, and go to state 12
    '('     shift, and go to state 13

    exp  go to state 26


State 12

   18 exp: '|' • exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 11
    '|'     shift, and go to state 12
    '('     shift, and go to state 13

    exp  go to state 27


State 13

   19 exp: '(' • exp ')'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 11
    '|'     shift, and go to state 12
    '('     shift, and go to state 13

    exp  go to state 28


State 14

    7 c_stmt: '{' • list '}'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    EOL     shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    '-'     shift, and go to state 11
    '|'     shift, and go to state 12
    '('     shift, and go to state 13
    '{'     shift, and go to state 14

    stmt    go to state 29
    o_stmt  go to state 16
    c_stmt  go to state 17
    list    go to state 30
    exp     go to state 18


State 15

   31 calclist: calclist stmt •

    $default  reduce using rule 31 (calclist)


State 16

    1 stmt: o_stmt •

    $default  reduce using rule 1 (stmt)


State 17

    2 stmt: c_stmt •

    $default  reduce using rule 2 (stmt)


State 18

    6 c_stmt: exp • EOL
   13 exp: exp • CMP exp
   14    | exp • '+' exp
   15    | exp • '-' exp
   16    | exp • '*' exp
   17    | exp • '/' exp

    EOL  shift, and go to state 31
    CMP  shift, and go to state 32
    '+'  shift, and go to state 33
    '-'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36


State 19

   33 calclist: calclist error EOL •

    $default  reduce using rule 33 (calclist)


State 20

   24 exp: NAME '=' • exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 11
    '|'     shift, and go to state 12
    '('     shift, and go to state 13

    exp  go to state 37


State 21

   25 exp: NAME '(' • explist ')'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 11
    '|'     shift, and go to state 12
    '('     shift, and go to state 13

    exp      go to state 38
    explist  go to state 39


State 22

   22 exp: FUNC '(' • explist ')'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 11
    '|'     shift, and go to state 12
    '('     shift, and go to state 13

    exp      go to state 38
    explist  go to state 40


State 23

    3 o_stmt: IF '(' • exp ')' stmt ENDIF
    4       | IF '(' • exp ')' c_stmt ELSE o_stmt ENDIF
    9 c_stmt: IF '(' • exp ')' c_stmt ELSE c_stmt ENDIF

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 11
    '|'     shift, and go to state 12
    '('     shift, and go to state 13

    exp  go to state 41


State 24

    5 o_stmt: WHILE '(' • exp ')' o_stmt
   10 c_stmt: WHILE '(' • exp ')' c_stmt

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 11
    '|'     shift, and go to state 12
    '('     shift, and go to state 13

    exp  go to state 42


State 25

   32 calclist: calclist LET NAME • '(' symlist ')' '=' list ENDDEF

    '('  shift, and go to state 43


State 26

   13 exp: exp • CMP exp
   14    | exp • '+' exp
   15    | exp • '-' exp
   16    | exp • '*' exp
   17    | exp • '/' exp
   20    | '-' exp •

    $default  reduce using rule 20 (exp)


State 27

   13 exp: exp • CMP exp
   14    | exp • '+' exp
   15    | exp • '-' exp
   16    | exp • '*' exp
   17    | exp • '/' exp
   18    | '|' exp •

    $default  reduce using rule 18 (exp)


State 28

   13 exp: exp • CMP exp
   14    | exp • '+' exp
   15    | exp • '-' exp
   16    | exp • '*' exp
   17    | exp • '/' exp
   19    | '(' exp • ')'

    CMP  shift, and go to state 32
    '+'  shift, and go to state 33
    '-'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36
    ')'  shift, and go to state 44


State 29

   11 list: stmt •

    $default  reduce using rule 11 (list)


State 30

    7 c_stmt: '{' list • '}'
   12 list: list • stmt

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    EOL     shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    '-'     shift, and go to state 11
    '|'     shift, and go to state 12
    '('     shift, and go to state 13
    '{'     shift, and go to state 14
    '}'     shift, and go to state 45

    stmt    go to state 46
    o_stmt  go to state 16
    c_stmt  go to state 17
    exp     go to state 18


State 31

    6 c_stmt: exp EOL •

    $default  reduce using rule 6 (c_stmt)


State 32

   13 exp: exp CMP • exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 11
    '|'     shift, and go to state 12
    '('     shift, and go to state 13

    exp  go to state 47


State 33

   14 exp: exp '+' • exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 11
    '|'     shift, and go to state 12
    '('     shift, and go to state 13

    exp  go to state 48


State 34

   15 exp: exp '-' • exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 11
    '|'     shift, and go to state 12
    '('     shift, and go to state 13

    exp  go to state 49


State 35

   16 exp: exp '*' • exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 11
    '|'     shift, and go to state 12
    '('     shift, and go to state 13

    exp  go to state 50


State 36

   17 exp: exp '/' • exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 11
    '|'     shift, and go to state 12
    '('     shift, and go to state 13

    exp  go to state 51


State 37

   13 exp: exp • CMP exp
   14    | exp • '+' exp
   15    | exp • '-' exp
   16    | exp • '*' exp
   17    | exp • '/' exp
   24    | NAME '=' exp •

    '+'  shift, and go to state 33
    '-'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    $default  reduce using rule 24 (exp)


State 38

   13 exp: exp • CMP exp
   14    | exp • '+' exp
   15    | exp • '-' exp
   16    | exp • '*' exp
   17    | exp • '/' exp
   26 explist: exp •
   27        | exp • ',' explist

    CMP  shift, and go to state 32
    '+'  shift, and go to state 33
    '-'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36
    ','  shift, and go to state 52

    $default  reduce using rule 26 (explist)


State 39

   25 exp: NAME '(' explist • ')'

    ')'  shift, and go to state 53


State 40

   22 exp: FUNC '(' explist • ')'

    ')'  shift, and go to state 54


State 41

    3 o_stmt: IF '(' exp • ')' stmt ENDIF
    4       | IF '(' exp • ')' c_stmt ELSE o_stmt ENDIF
    9 c_stmt: IF '(' exp • ')' c_stmt ELSE c_stmt ENDIF
   13 exp: exp • CMP exp
   14    | exp • '+' exp
   15    | exp • '-' exp
   16    | exp • '*' exp
   17    | exp • '/' exp

    CMP  shift, and go to state 32
    '+'  shift, and go to state 33
    '-'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36
    ')'  shift, and go to state 55


State 42

    5 o_stmt: WHILE '(' exp • ')' o_stmt
   10 c_stmt: WHILE '(' exp • ')' c_stmt
   13 exp: exp • CMP exp
   14    | exp • '+' exp
   15    | exp • '-' exp
   16    | exp • '*' exp
   17    | exp • '/' exp

    CMP  shift, and go to state 32
    '+'  shift, and go to state 33
    '-'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36
    ')'  shift, and go to state 56


State 43

   32 calclist: calclist LET NAME '(' • symlist ')' '=' list ENDDEF

    NAME  shift, and go to state 57

    symlist  go to state 58


State 44

   19 exp: '(' exp ')' •

    $default  reduce using rule 19 (exp)


State 45

    7 c_stmt: '{' list '}' •

    $default  reduce using rule 7 (c_stmt)


State 46

   12 list: list stmt •

    $default  reduce using rule 12 (list)


State 47

   13 exp: exp • CMP exp
   13    | exp CMP exp •
   14    | exp • '+' exp
   15    | exp • '-' exp
   16    | exp • '*' exp
   17    | exp • '/' exp

    '+'  shift, and go to state 33
    '-'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    CMP  error (nonassociative)

    $default  reduce using rule 13 (exp)


State 48

   13 exp: exp • CMP exp
   14    | exp • '+' exp
   14    | exp '+' exp •
   15    | exp • '-' exp
   16    | exp • '*' exp
   17    | exp • '/' exp

    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    $default  reduce using rule 14 (exp)


State 49

   13 exp: exp • CMP exp
   14    | exp • '+' exp
   15    | exp • '-' exp
   15    | exp '-' exp •
   16    | exp • '*' exp
   17    | exp • '/' exp

    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    $default  reduce using rule 15 (exp)


State 50

   13 exp: exp • CMP exp
   14    | exp • '+' exp
   15    | exp • '-' exp
   16    | exp • '*' exp
   16    | exp '*' exp •
   17    | exp • '/' exp

    $default  reduce using rule 16 (exp)


State 51

   13 exp: exp • CMP exp
   14    | exp • '+' exp
   15    | exp • '-' exp
   16    | exp • '*' exp
   17    | exp • '/' exp
   17    | exp '/' exp •

    $default  reduce using rule 17 (exp)


State 52

   27 explist: exp ',' • explist

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 11
    '|'     shift, and go to state 12
    '('     shift, and go to state 13

    exp      go to state 38
    explist  go to state 59


State 53

   25 exp: NAME '(' explist ')' •

    $default  reduce using rule 25 (exp)


State 54

   22 exp: FUNC '(' explist ')' •

    $default  reduce using rule 22 (exp)


State 55

    3 o_stmt: IF '(' exp ')' • stmt ENDIF
    4       | IF '(' exp ')' • c_stmt ELSE o_stmt ENDIF
    9 c_stmt: IF '(' exp ')' • c_stmt ELSE c_stmt ENDIF

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    EOL     shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    '-'     shift, and go to state 11
    '|'     shift, and go to state 12
    '('     shift, and go to state 13
    '{'     shift, and go to state 14

    stmt    go to state 60
    o_stmt  go to state 16
    c_stmt  go to state 61
    exp     go to state 18


State 56

    5 o_stmt: WHILE '(' exp ')' • o_stmt
   10 c_stmt: WHILE '(' exp ')' • c_stmt

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    EOL     shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    '-'     shift, and go to state 11
    '|'     shift, and go to state 12
    '('     shift, and go to state 13
    '{'     shift, and go to state 14

    o_stmt  go to state 62
    c_stmt  go to state 63
    exp     go to state 18


State 57

   28 symlist: NAME •
   29        | NAME • ',' symlist

    ','  shift, and go to state 64

    $default  reduce using rule 28 (symlist)


State 58

   32 calclist: calclist LET NAME '(' symlist • ')' '=' list ENDDEF

    ')'  shift, and go to state 65


State 59

   27 explist: exp ',' explist •

    $default  reduce using rule 27 (explist)


State 60

    3 o_stmt: IF '(' exp ')' stmt • ENDIF

    ENDIF  shift, and go to state 66


State 61

    2 stmt: c_stmt •
    4 o_stmt: IF '(' exp ')' c_stmt • ELSE o_stmt ENDIF
    9 c_stmt: IF '(' exp ')' c_stmt • ELSE c_stmt ENDIF

    ELSE  shift, and go to state 67

    $default  reduce using rule 2 (stmt)


State 62

    5 o_stmt: WHILE '(' exp ')' o_stmt •

    $default  reduce using rule 5 (o_stmt)


State 63

   10 c_stmt: WHILE '(' exp ')' c_stmt •

    $default  reduce using rule 10 (c_stmt)


State 64

   29 symlist: NAME ',' • symlist

    NAME  shift, and go to state 57

    symlist  go to state 68


State 65

   32 calclist: calclist LET NAME '(' symlist ')' • '=' list ENDDEF

    '='  shift, and go to state 69


State 66

    3 o_stmt: IF '(' exp ')' stmt ENDIF •

    $default  reduce using rule 3 (o_stmt)


State 67

    4 o_stmt: IF '(' exp ')' c_stmt ELSE • o_stmt ENDIF
    9 c_stmt: IF '(' exp ')' c_stmt ELSE • c_stmt ENDIF

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    EOL     shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    '-'     shift, and go to state 11
    '|'     shift, and go to state 12
    '('     shift, and go to state 13
    '{'     shift, and go to state 14

    o_stmt  go to state 70
    c_stmt  go to state 71
    exp     go to state 18


State 68

   29 symlist: NAME ',' symlist •

    $default  reduce using rule 29 (symlist)


State 69

   32 calclist: calclist LET NAME '(' symlist ')' '=' • list ENDDEF

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    EOL     shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    '-'     shift, and go to state 11
    '|'     shift, and go to state 12
    '('     shift, and go to state 13
    '{'     shift, and go to state 14

    stmt    go to state 29
    o_stmt  go to state 16
    c_stmt  go to state 17
    list    go to state 72
    exp     go to state 18


State 70

    4 o_stmt: IF '(' exp ')' c_stmt ELSE o_stmt • ENDIF

    ENDIF  shift, and go to state 73


State 71

    9 c_stmt: IF '(' exp ')' c_stmt ELSE c_stmt • ENDIF

    ENDIF  shift, and go to state 74


State 72

   12 list: list • stmt
   32 calclist: calclist LET NAME '(' symlist ')' '=' list • ENDDEF

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    EOL     shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    ENDDEF  shift, and go to state 75
    '-'     shift, and go to state 11
    '|'     shift, and go to state 12
    '('     shift, and go to state 13
    '{'     shift, and go to state 14

    stmt    go to state 46
    o_stmt  go to state 16
    c_stmt  go to state 17
    exp     go to state 18


State 73

    4 o_stmt: IF '(' exp ')' c_stmt ELSE o_stmt ENDIF •

    $default  reduce using rule 4 (o_stmt)


State 74

    9 c_stmt: IF '(' exp ')' c_stmt ELSE c_stmt ENDIF •

    $default  reduce using rule 9 (c_stmt)


State 75

   32 calclist: calclist LET NAME '(' symlist ')' '=' list ENDDEF •

    $default  reduce using rule 32 (calclist)
