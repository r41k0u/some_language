Grammar

    0 $accept: calclist $end

    1 stmt: o_stmt
    2     | c_stmt

    3 o_stmt: IF '(' exp ')' stmt ENDIF
    4       | IF '(' exp ')' c_stmt ELSE o_stmt ENDIF
    5       | WHILE '(' exp ')' o_stmt

    6 c_stmt: exp EOL
    7       | '{' list '}'
    8       | EOL
    9       | IF '(' exp ')' c_stmt ELSE c_stmt ENDIF
   10       | WHILE '(' exp ')' c_stmt
   11       | CLASS NAME NAME EOL ENDCLASS
   12       | MAKEOBJ NAME NAME EOL

   13 list: stmt
   14     | list stmt

   15 exp: exp CMP exp
   16    | exp XOR exp
   17    | exp OR exp
   18    | exp AND exp
   19    | NOT exp
   20    | exp '+' exp
   21    | exp '-' exp
   22    | exp '*' exp
   23    | exp '/' exp
   24    | '|' exp
   25    | '(' exp ')'
   26    | '-' exp
   27    | NUMBER
   28    | FUNC '(' explist ')'
   29    | NAME
   30    | NAME '=' exp
   31    | NAME '(' explist ')'

   32 explist: exp
   33        | exp ',' explist

   34 symlist: NAME
   35        | NAME ',' symlist

   36 calclist: ε
   37         | calclist stmt
   38         | calclist LET NAME '(' symlist ')' '=' list ENDDEF
   39         | calclist CLASS NAME LET NAME '(' symlist ')' '=' list ENDDEF ENDCLASS
   40         | calclist error EOL


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 3 4 5 9 10 25 28 31 38 39
    ')' (41) 3 4 5 9 10 25 28 31 38 39
    '*' (42) 22
    '+' (43) 20
    ',' (44) 33 35
    '-' (45) 21 26
    '/' (47) 23
    '=' (61) 30 38 39
    '{' (123) 7
    '|' (124) 24
    '}' (125) 7
    error (256) 40
    NUMBER <d> (258) 27
    NAME <s> (259) 11 12 29 30 31 34 35 38 39
    FUNC <fn> (260) 28
    EOL (261) 6 8 11 12 40
    IF (262) 3 4 9
    ELSE (263) 4 9
    WHILE (264) 5 10
    LET (265) 38 39
    ENDIF (266) 3 4 9
    ENDDEF (267) 38 39
    CLASS (268) 11 39
    ENDCLASS (269) 11 39
    MAKEOBJ (270) 12
    CMP <fn> (271) 15
    AND <fn> (272) 18
    OR <fn> (273) 17
    XOR <fn> (274) 16
    NOT <fn> (275) 19
    UMINUS (276)


Nonterminals, with rules where they appear

    $accept (33)
        on left: 0
    stmt <a> (34)
        on left: 1 2
        on right: 3 13 14 37
    o_stmt <a> (35)
        on left: 3 4 5
        on right: 1 4 5
    c_stmt <a> (36)
        on left: 6 7 8 9 10 11 12
        on right: 2 4 9 10
    list <a> (37)
        on left: 13 14
        on right: 7 14 38 39
    exp <a> (38)
        on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
        on right: 3 4 5 6 9 10 15 16 17 18 19 20 21 22 23 24 25 26 30 32 33
    explist <a> (39)
        on left: 32 33
        on right: 28 31 33
    symlist <sl> (40)
        on left: 34 35
        on right: 35 38 39
    calclist (41)
        on left: 36 37 38 39 40
        on right: 0 37 38 39 40


State 0

    0 $accept: • calclist $end

    $default  reduce using rule 36 (calclist)

    calclist  go to state 1


State 1

    0 $accept: calclist • $end
   37 calclist: calclist • stmt
   38         | calclist • LET NAME '(' symlist ')' '=' list ENDDEF
   39         | calclist • CLASS NAME LET NAME '(' symlist ')' '=' list ENDDEF ENDCLASS
   40         | calclist • error EOL

    $end     shift, and go to state 2
    error    shift, and go to state 3
    NUMBER   shift, and go to state 4
    NAME     shift, and go to state 5
    FUNC     shift, and go to state 6
    EOL      shift, and go to state 7
    IF       shift, and go to state 8
    WHILE    shift, and go to state 9
    LET      shift, and go to state 10
    CLASS    shift, and go to state 11
    MAKEOBJ  shift, and go to state 12
    '-'      shift, and go to state 13
    NOT      shift, and go to state 14
    '|'      shift, and go to state 15
    '('      shift, and go to state 16
    '{'      shift, and go to state 17

    stmt    go to state 18
    o_stmt  go to state 19
    c_stmt  go to state 20
    exp     go to state 21


State 2

    0 $accept: calclist $end •

    $default  accept


State 3

   40 calclist: calclist error • EOL

    EOL  shift, and go to state 22


State 4

   27 exp: NUMBER •

    $default  reduce using rule 27 (exp)


State 5

   29 exp: NAME •
   30    | NAME • '=' exp
   31    | NAME • '(' explist ')'

    '='  shift, and go to state 23
    '('  shift, and go to state 24

    $default  reduce using rule 29 (exp)


State 6

   28 exp: FUNC • '(' explist ')'

    '('  shift, and go to state 25


State 7

    8 c_stmt: EOL •

    $default  reduce using rule 8 (c_stmt)


State 8

    3 o_stmt: IF • '(' exp ')' stmt ENDIF
    4       | IF • '(' exp ')' c_stmt ELSE o_stmt ENDIF
    9 c_stmt: IF • '(' exp ')' c_stmt ELSE c_stmt ENDIF

    '('  shift, and go to state 26


State 9

    5 o_stmt: WHILE • '(' exp ')' o_stmt
   10 c_stmt: WHILE • '(' exp ')' c_stmt

    '('  shift, and go to state 27


State 10

   38 calclist: calclist LET • NAME '(' symlist ')' '=' list ENDDEF

    NAME  shift, and go to state 28


State 11

   11 c_stmt: CLASS • NAME NAME EOL ENDCLASS
   39 calclist: calclist CLASS • NAME LET NAME '(' symlist ')' '=' list ENDDEF ENDCLASS

    NAME  shift, and go to state 29


State 12

   12 c_stmt: MAKEOBJ • NAME NAME EOL

    NAME  shift, and go to state 30


State 13

   26 exp: '-' • exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 13
    NOT     shift, and go to state 14
    '|'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 31


State 14

   19 exp: NOT • exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 13
    NOT     shift, and go to state 14
    '|'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 32


State 15

   24 exp: '|' • exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 13
    NOT     shift, and go to state 14
    '|'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 33


State 16

   25 exp: '(' • exp ')'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 13
    NOT     shift, and go to state 14
    '|'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 34


State 17

    7 c_stmt: '{' • list '}'

    NUMBER   shift, and go to state 4
    NAME     shift, and go to state 5
    FUNC     shift, and go to state 6
    EOL      shift, and go to state 7
    IF       shift, and go to state 8
    WHILE    shift, and go to state 9
    CLASS    shift, and go to state 35
    MAKEOBJ  shift, and go to state 12
    '-'      shift, and go to state 13
    NOT      shift, and go to state 14
    '|'      shift, and go to state 15
    '('      shift, and go to state 16
    '{'      shift, and go to state 17

    stmt    go to state 36
    o_stmt  go to state 19
    c_stmt  go to state 20
    list    go to state 37
    exp     go to state 21


State 18

   37 calclist: calclist stmt •

    $default  reduce using rule 37 (calclist)


State 19

    1 stmt: o_stmt •

    $default  reduce using rule 1 (stmt)


State 20

    2 stmt: c_stmt •

    $default  reduce using rule 2 (stmt)


State 21

    6 c_stmt: exp • EOL
   15 exp: exp • CMP exp
   16    | exp • XOR exp
   17    | exp • OR exp
   18    | exp • AND exp
   20    | exp • '+' exp
   21    | exp • '-' exp
   22    | exp • '*' exp
   23    | exp • '/' exp

    EOL  shift, and go to state 38
    CMP  shift, and go to state 39
    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    AND  shift, and go to state 44
    OR   shift, and go to state 45
    XOR  shift, and go to state 46


State 22

   40 calclist: calclist error EOL •

    $default  reduce using rule 40 (calclist)


State 23

   30 exp: NAME '=' • exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 13
    NOT     shift, and go to state 14
    '|'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 47


State 24

   31 exp: NAME '(' • explist ')'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 13
    NOT     shift, and go to state 14
    '|'     shift, and go to state 15
    '('     shift, and go to state 16

    exp      go to state 48
    explist  go to state 49


State 25

   28 exp: FUNC '(' • explist ')'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 13
    NOT     shift, and go to state 14
    '|'     shift, and go to state 15
    '('     shift, and go to state 16

    exp      go to state 48
    explist  go to state 50


State 26

    3 o_stmt: IF '(' • exp ')' stmt ENDIF
    4       | IF '(' • exp ')' c_stmt ELSE o_stmt ENDIF
    9 c_stmt: IF '(' • exp ')' c_stmt ELSE c_stmt ENDIF

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 13
    NOT     shift, and go to state 14
    '|'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 51


State 27

    5 o_stmt: WHILE '(' • exp ')' o_stmt
   10 c_stmt: WHILE '(' • exp ')' c_stmt

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 13
    NOT     shift, and go to state 14
    '|'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 52


State 28

   38 calclist: calclist LET NAME • '(' symlist ')' '=' list ENDDEF

    '('  shift, and go to state 53


State 29

   11 c_stmt: CLASS NAME • NAME EOL ENDCLASS
   39 calclist: calclist CLASS NAME • LET NAME '(' symlist ')' '=' list ENDDEF ENDCLASS

    NAME  shift, and go to state 54
    LET   shift, and go to state 55


State 30

   12 c_stmt: MAKEOBJ NAME • NAME EOL

    NAME  shift, and go to state 56


State 31

   15 exp: exp • CMP exp
   16    | exp • XOR exp
   17    | exp • OR exp
   18    | exp • AND exp
   20    | exp • '+' exp
   21    | exp • '-' exp
   22    | exp • '*' exp
   23    | exp • '/' exp
   26    | '-' exp •

    $default  reduce using rule 26 (exp)


State 32

   15 exp: exp • CMP exp
   16    | exp • XOR exp
   17    | exp • OR exp
   18    | exp • AND exp
   19    | NOT exp •
   20    | exp • '+' exp
   21    | exp • '-' exp
   22    | exp • '*' exp
   23    | exp • '/' exp

    $default  reduce using rule 19 (exp)


State 33

   15 exp: exp • CMP exp
   16    | exp • XOR exp
   17    | exp • OR exp
   18    | exp • AND exp
   20    | exp • '+' exp
   21    | exp • '-' exp
   22    | exp • '*' exp
   23    | exp • '/' exp
   24    | '|' exp •

    $default  reduce using rule 24 (exp)


State 34

   15 exp: exp • CMP exp
   16    | exp • XOR exp
   17    | exp • OR exp
   18    | exp • AND exp
   20    | exp • '+' exp
   21    | exp • '-' exp
   22    | exp • '*' exp
   23    | exp • '/' exp
   25    | '(' exp • ')'

    CMP  shift, and go to state 39
    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    AND  shift, and go to state 44
    OR   shift, and go to state 45
    XOR  shift, and go to state 46
    ')'  shift, and go to state 57


State 35

   11 c_stmt: CLASS • NAME NAME EOL ENDCLASS

    NAME  shift, and go to state 58


State 36

   13 list: stmt •

    $default  reduce using rule 13 (list)


State 37

    7 c_stmt: '{' list • '}'
   14 list: list • stmt

    NUMBER   shift, and go to state 4
    NAME     shift, and go to state 5
    FUNC     shift, and go to state 6
    EOL      shift, and go to state 7
    IF       shift, and go to state 8
    WHILE    shift, and go to state 9
    CLASS    shift, and go to state 35
    MAKEOBJ  shift, and go to state 12
    '-'      shift, and go to state 13
    NOT      shift, and go to state 14
    '|'      shift, and go to state 15
    '('      shift, and go to state 16
    '{'      shift, and go to state 17
    '}'      shift, and go to state 59

    stmt    go to state 60
    o_stmt  go to state 19
    c_stmt  go to state 20
    exp     go to state 21


State 38

    6 c_stmt: exp EOL •

    $default  reduce using rule 6 (c_stmt)


State 39

   15 exp: exp CMP • exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 13
    NOT     shift, and go to state 14
    '|'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 61


State 40

   20 exp: exp '+' • exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 13
    NOT     shift, and go to state 14
    '|'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 62


State 41

   21 exp: exp '-' • exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 13
    NOT     shift, and go to state 14
    '|'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 63


State 42

   22 exp: exp '*' • exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 13
    NOT     shift, and go to state 14
    '|'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 64


State 43

   23 exp: exp '/' • exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 13
    NOT     shift, and go to state 14
    '|'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 65


State 44

   18 exp: exp AND • exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 13
    NOT     shift, and go to state 14
    '|'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 66


State 45

   17 exp: exp OR • exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 13
    NOT     shift, and go to state 14
    '|'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 67


State 46

   16 exp: exp XOR • exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 13
    NOT     shift, and go to state 14
    '|'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 68


State 47

   15 exp: exp • CMP exp
   16    | exp • XOR exp
   17    | exp • OR exp
   18    | exp • AND exp
   20    | exp • '+' exp
   21    | exp • '-' exp
   22    | exp • '*' exp
   23    | exp • '/' exp
   30    | NAME '=' exp •

    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    AND  shift, and go to state 44
    OR   shift, and go to state 45
    XOR  shift, and go to state 46

    $default  reduce using rule 30 (exp)


State 48

   15 exp: exp • CMP exp
   16    | exp • XOR exp
   17    | exp • OR exp
   18    | exp • AND exp
   20    | exp • '+' exp
   21    | exp • '-' exp
   22    | exp • '*' exp
   23    | exp • '/' exp
   32 explist: exp •
   33        | exp • ',' explist

    CMP  shift, and go to state 39
    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    AND  shift, and go to state 44
    OR   shift, and go to state 45
    XOR  shift, and go to state 46
    ','  shift, and go to state 69

    $default  reduce using rule 32 (explist)


State 49

   31 exp: NAME '(' explist • ')'

    ')'  shift, and go to state 70


State 50

   28 exp: FUNC '(' explist • ')'

    ')'  shift, and go to state 71


State 51

    3 o_stmt: IF '(' exp • ')' stmt ENDIF
    4       | IF '(' exp • ')' c_stmt ELSE o_stmt ENDIF
    9 c_stmt: IF '(' exp • ')' c_stmt ELSE c_stmt ENDIF
   15 exp: exp • CMP exp
   16    | exp • XOR exp
   17    | exp • OR exp
   18    | exp • AND exp
   20    | exp • '+' exp
   21    | exp • '-' exp
   22    | exp • '*' exp
   23    | exp • '/' exp

    CMP  shift, and go to state 39
    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    AND  shift, and go to state 44
    OR   shift, and go to state 45
    XOR  shift, and go to state 46
    ')'  shift, and go to state 72


State 52

    5 o_stmt: WHILE '(' exp • ')' o_stmt
   10 c_stmt: WHILE '(' exp • ')' c_stmt
   15 exp: exp • CMP exp
   16    | exp • XOR exp
   17    | exp • OR exp
   18    | exp • AND exp
   20    | exp • '+' exp
   21    | exp • '-' exp
   22    | exp • '*' exp
   23    | exp • '/' exp

    CMP  shift, and go to state 39
    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    AND  shift, and go to state 44
    OR   shift, and go to state 45
    XOR  shift, and go to state 46
    ')'  shift, and go to state 73


State 53

   38 calclist: calclist LET NAME '(' • symlist ')' '=' list ENDDEF

    NAME  shift, and go to state 74

    symlist  go to state 75


State 54

   11 c_stmt: CLASS NAME NAME • EOL ENDCLASS

    EOL  shift, and go to state 76


State 55

   39 calclist: calclist CLASS NAME LET • NAME '(' symlist ')' '=' list ENDDEF ENDCLASS

    NAME  shift, and go to state 77


State 56

   12 c_stmt: MAKEOBJ NAME NAME • EOL

    EOL  shift, and go to state 78


State 57

   25 exp: '(' exp ')' •

    $default  reduce using rule 25 (exp)


State 58

   11 c_stmt: CLASS NAME • NAME EOL ENDCLASS

    NAME  shift, and go to state 54


State 59

    7 c_stmt: '{' list '}' •

    $default  reduce using rule 7 (c_stmt)


State 60

   14 list: list stmt •

    $default  reduce using rule 14 (list)


State 61

   15 exp: exp • CMP exp
   15    | exp CMP exp •
   16    | exp • XOR exp
   17    | exp • OR exp
   18    | exp • AND exp
   20    | exp • '+' exp
   21    | exp • '-' exp
   22    | exp • '*' exp
   23    | exp • '/' exp

    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    AND  shift, and go to state 44
    OR   shift, and go to state 45
    XOR  shift, and go to state 46

    CMP  error (nonassociative)

    $default  reduce using rule 15 (exp)


State 62

   15 exp: exp • CMP exp
   16    | exp • XOR exp
   17    | exp • OR exp
   18    | exp • AND exp
   20    | exp • '+' exp
   20    | exp '+' exp •
   21    | exp • '-' exp
   22    | exp • '*' exp
   23    | exp • '/' exp

    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    AND  shift, and go to state 44
    OR   shift, and go to state 45
    XOR  shift, and go to state 46

    $default  reduce using rule 20 (exp)


State 63

   15 exp: exp • CMP exp
   16    | exp • XOR exp
   17    | exp • OR exp
   18    | exp • AND exp
   20    | exp • '+' exp
   21    | exp • '-' exp
   21    | exp '-' exp •
   22    | exp • '*' exp
   23    | exp • '/' exp

    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    AND  shift, and go to state 44
    OR   shift, and go to state 45
    XOR  shift, and go to state 46

    $default  reduce using rule 21 (exp)


State 64

   15 exp: exp • CMP exp
   16    | exp • XOR exp
   17    | exp • OR exp
   18    | exp • AND exp
   20    | exp • '+' exp
   21    | exp • '-' exp
   22    | exp • '*' exp
   22    | exp '*' exp •
   23    | exp • '/' exp

    AND  shift, and go to state 44
    OR   shift, and go to state 45
    XOR  shift, and go to state 46

    $default  reduce using rule 22 (exp)


State 65

   15 exp: exp • CMP exp
   16    | exp • XOR exp
   17    | exp • OR exp
   18    | exp • AND exp
   20    | exp • '+' exp
   21    | exp • '-' exp
   22    | exp • '*' exp
   23    | exp • '/' exp
   23    | exp '/' exp •

    AND  shift, and go to state 44
    OR   shift, and go to state 45
    XOR  shift, and go to state 46

    $default  reduce using rule 23 (exp)


State 66

   15 exp: exp • CMP exp
   16    | exp • XOR exp
   17    | exp • OR exp
   18    | exp • AND exp
   18    | exp AND exp •
   20    | exp • '+' exp
   21    | exp • '-' exp
   22    | exp • '*' exp
   23    | exp • '/' exp

    $default  reduce using rule 18 (exp)


State 67

   15 exp: exp • CMP exp
   16    | exp • XOR exp
   17    | exp • OR exp
   17    | exp OR exp •
   18    | exp • AND exp
   20    | exp • '+' exp
   21    | exp • '-' exp
   22    | exp • '*' exp
   23    | exp • '/' exp

    $default  reduce using rule 17 (exp)


State 68

   15 exp: exp • CMP exp
   16    | exp • XOR exp
   16    | exp XOR exp •
   17    | exp • OR exp
   18    | exp • AND exp
   20    | exp • '+' exp
   21    | exp • '-' exp
   22    | exp • '*' exp
   23    | exp • '/' exp

    $default  reduce using rule 16 (exp)


State 69

   33 explist: exp ',' • explist

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 13
    NOT     shift, and go to state 14
    '|'     shift, and go to state 15
    '('     shift, and go to state 16

    exp      go to state 48
    explist  go to state 79


State 70

   31 exp: NAME '(' explist ')' •

    $default  reduce using rule 31 (exp)


State 71

   28 exp: FUNC '(' explist ')' •

    $default  reduce using rule 28 (exp)


State 72

    3 o_stmt: IF '(' exp ')' • stmt ENDIF
    4       | IF '(' exp ')' • c_stmt ELSE o_stmt ENDIF
    9 c_stmt: IF '(' exp ')' • c_stmt ELSE c_stmt ENDIF

    NUMBER   shift, and go to state 4
    NAME     shift, and go to state 5
    FUNC     shift, and go to state 6
    EOL      shift, and go to state 7
    IF       shift, and go to state 8
    WHILE    shift, and go to state 9
    CLASS    shift, and go to state 35
    MAKEOBJ  shift, and go to state 12
    '-'      shift, and go to state 13
    NOT      shift, and go to state 14
    '|'      shift, and go to state 15
    '('      shift, and go to state 16
    '{'      shift, and go to state 17

    stmt    go to state 80
    o_stmt  go to state 19
    c_stmt  go to state 81
    exp     go to state 21


State 73

    5 o_stmt: WHILE '(' exp ')' • o_stmt
   10 c_stmt: WHILE '(' exp ')' • c_stmt

    NUMBER   shift, and go to state 4
    NAME     shift, and go to state 5
    FUNC     shift, and go to state 6
    EOL      shift, and go to state 7
    IF       shift, and go to state 8
    WHILE    shift, and go to state 9
    CLASS    shift, and go to state 35
    MAKEOBJ  shift, and go to state 12
    '-'      shift, and go to state 13
    NOT      shift, and go to state 14
    '|'      shift, and go to state 15
    '('      shift, and go to state 16
    '{'      shift, and go to state 17

    o_stmt  go to state 82
    c_stmt  go to state 83
    exp     go to state 21


State 74

   34 symlist: NAME •
   35        | NAME • ',' symlist

    ','  shift, and go to state 84

    $default  reduce using rule 34 (symlist)


State 75

   38 calclist: calclist LET NAME '(' symlist • ')' '=' list ENDDEF

    ')'  shift, and go to state 85


State 76

   11 c_stmt: CLASS NAME NAME EOL • ENDCLASS

    ENDCLASS  shift, and go to state 86


State 77

   39 calclist: calclist CLASS NAME LET NAME • '(' symlist ')' '=' list ENDDEF ENDCLASS

    '('  shift, and go to state 87


State 78

   12 c_stmt: MAKEOBJ NAME NAME EOL •

    $default  reduce using rule 12 (c_stmt)


State 79

   33 explist: exp ',' explist •

    $default  reduce using rule 33 (explist)


State 80

    3 o_stmt: IF '(' exp ')' stmt • ENDIF

    ENDIF  shift, and go to state 88


State 81

    2 stmt: c_stmt •
    4 o_stmt: IF '(' exp ')' c_stmt • ELSE o_stmt ENDIF
    9 c_stmt: IF '(' exp ')' c_stmt • ELSE c_stmt ENDIF

    ELSE  shift, and go to state 89

    $default  reduce using rule 2 (stmt)


State 82

    5 o_stmt: WHILE '(' exp ')' o_stmt •

    $default  reduce using rule 5 (o_stmt)


State 83

   10 c_stmt: WHILE '(' exp ')' c_stmt •

    $default  reduce using rule 10 (c_stmt)


State 84

   35 symlist: NAME ',' • symlist

    NAME  shift, and go to state 74

    symlist  go to state 90


State 85

   38 calclist: calclist LET NAME '(' symlist ')' • '=' list ENDDEF

    '='  shift, and go to state 91


State 86

   11 c_stmt: CLASS NAME NAME EOL ENDCLASS •

    $default  reduce using rule 11 (c_stmt)


State 87

   39 calclist: calclist CLASS NAME LET NAME '(' • symlist ')' '=' list ENDDEF ENDCLASS

    NAME  shift, and go to state 74

    symlist  go to state 92


State 88

    3 o_stmt: IF '(' exp ')' stmt ENDIF •

    $default  reduce using rule 3 (o_stmt)


State 89

    4 o_stmt: IF '(' exp ')' c_stmt ELSE • o_stmt ENDIF
    9 c_stmt: IF '(' exp ')' c_stmt ELSE • c_stmt ENDIF

    NUMBER   shift, and go to state 4
    NAME     shift, and go to state 5
    FUNC     shift, and go to state 6
    EOL      shift, and go to state 7
    IF       shift, and go to state 8
    WHILE    shift, and go to state 9
    CLASS    shift, and go to state 35
    MAKEOBJ  shift, and go to state 12
    '-'      shift, and go to state 13
    NOT      shift, and go to state 14
    '|'      shift, and go to state 15
    '('      shift, and go to state 16
    '{'      shift, and go to state 17

    o_stmt  go to state 93
    c_stmt  go to state 94
    exp     go to state 21


State 90

   35 symlist: NAME ',' symlist •

    $default  reduce using rule 35 (symlist)


State 91

   38 calclist: calclist LET NAME '(' symlist ')' '=' • list ENDDEF

    NUMBER   shift, and go to state 4
    NAME     shift, and go to state 5
    FUNC     shift, and go to state 6
    EOL      shift, and go to state 7
    IF       shift, and go to state 8
    WHILE    shift, and go to state 9
    CLASS    shift, and go to state 35
    MAKEOBJ  shift, and go to state 12
    '-'      shift, and go to state 13
    NOT      shift, and go to state 14
    '|'      shift, and go to state 15
    '('      shift, and go to state 16
    '{'      shift, and go to state 17

    stmt    go to state 36
    o_stmt  go to state 19
    c_stmt  go to state 20
    list    go to state 95
    exp     go to state 21


State 92

   39 calclist: calclist CLASS NAME LET NAME '(' symlist • ')' '=' list ENDDEF ENDCLASS

    ')'  shift, and go to state 96


State 93

    4 o_stmt: IF '(' exp ')' c_stmt ELSE o_stmt • ENDIF

    ENDIF  shift, and go to state 97


State 94

    9 c_stmt: IF '(' exp ')' c_stmt ELSE c_stmt • ENDIF

    ENDIF  shift, and go to state 98


State 95

   14 list: list • stmt
   38 calclist: calclist LET NAME '(' symlist ')' '=' list • ENDDEF

    NUMBER   shift, and go to state 4
    NAME     shift, and go to state 5
    FUNC     shift, and go to state 6
    EOL      shift, and go to state 7
    IF       shift, and go to state 8
    WHILE    shift, and go to state 9
    ENDDEF   shift, and go to state 99
    CLASS    shift, and go to state 35
    MAKEOBJ  shift, and go to state 12
    '-'      shift, and go to state 13
    NOT      shift, and go to state 14
    '|'      shift, and go to state 15
    '('      shift, and go to state 16
    '{'      shift, and go to state 17

    stmt    go to state 60
    o_stmt  go to state 19
    c_stmt  go to state 20
    exp     go to state 21


State 96

   39 calclist: calclist CLASS NAME LET NAME '(' symlist ')' • '=' list ENDDEF ENDCLASS

    '='  shift, and go to state 100


State 97

    4 o_stmt: IF '(' exp ')' c_stmt ELSE o_stmt ENDIF •

    $default  reduce using rule 4 (o_stmt)


State 98

    9 c_stmt: IF '(' exp ')' c_stmt ELSE c_stmt ENDIF •

    $default  reduce using rule 9 (c_stmt)


State 99

   38 calclist: calclist LET NAME '(' symlist ')' '=' list ENDDEF •

    $default  reduce using rule 38 (calclist)


State 100

   39 calclist: calclist CLASS NAME LET NAME '(' symlist ')' '=' • list ENDDEF ENDCLASS

    NUMBER   shift, and go to state 4
    NAME     shift, and go to state 5
    FUNC     shift, and go to state 6
    EOL      shift, and go to state 7
    IF       shift, and go to state 8
    WHILE    shift, and go to state 9
    CLASS    shift, and go to state 35
    MAKEOBJ  shift, and go to state 12
    '-'      shift, and go to state 13
    NOT      shift, and go to state 14
    '|'      shift, and go to state 15
    '('      shift, and go to state 16
    '{'      shift, and go to state 17

    stmt    go to state 36
    o_stmt  go to state 19
    c_stmt  go to state 20
    list    go to state 101
    exp     go to state 21


State 101

   14 list: list • stmt
   39 calclist: calclist CLASS NAME LET NAME '(' symlist ')' '=' list • ENDDEF ENDCLASS

    NUMBER   shift, and go to state 4
    NAME     shift, and go to state 5
    FUNC     shift, and go to state 6
    EOL      shift, and go to state 7
    IF       shift, and go to state 8
    WHILE    shift, and go to state 9
    ENDDEF   shift, and go to state 102
    CLASS    shift, and go to state 35
    MAKEOBJ  shift, and go to state 12
    '-'      shift, and go to state 13
    NOT      shift, and go to state 14
    '|'      shift, and go to state 15
    '('      shift, and go to state 16
    '{'      shift, and go to state 17

    stmt    go to state 60
    o_stmt  go to state 19
    c_stmt  go to state 20
    exp     go to state 21


State 102

   39 calclist: calclist CLASS NAME LET NAME '(' symlist ')' '=' list ENDDEF • ENDCLASS

    ENDCLASS  shift, and go to state 103


State 103

   39 calclist: calclist CLASS NAME LET NAME '(' symlist ')' '=' list ENDDEF ENDCLASS •

    $default  reduce using rule 39 (calclist)
